---
import { getCollection } from "astro:content";
import Container from "@components/Container.astro";
import PageLayout from "@layouts/PageLayout.astro";
import ArrowCard from "@components/ArrowCard.astro";
import SocialLink from "@components/SocialLink.astro";
import { dateRange } from "@lib/utils";
import { SITE, HOME, SOCIALS, ROUTES } from "@consts";
import CalendarBooker from "@react/components/CalendarBooker";
import Section from "@components/Section.astro";

const articles = (await getCollection("articles"))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0, SITE.NUM_POSTS_ON_HOMEPAGE);

const projects = (await getCollection("projects"))
  .filter((project) => !project.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0, SITE.NUM_PROJECTS_ON_HOMEPAGE);

const allwork = (await getCollection("work"))
  .sort(
    (a, b) =>
      new Date(b.data.dateStart).valueOf() -
      new Date(a.data.dateStart).valueOf(),
  )
  .slice(0, SITE.NUM_WORKS_ON_HOMEPAGE);

const work = await Promise.all(
  allwork.map(async (item) => {
    const { Content } = await item.render();
    return { ...item, Content };
  }),
);
---

<PageLayout title={HOME.TITLE} description={HOME.DESCRIPTION}>
  <Container>
    <div class="space-y-16">
      <Section
        title="Hi, I'm Panashe ðŸ‘‹"
        description="I'm a strategic engineering consultant who helps \
        early-stage NYC startups, especially those with non-technical founders, \
        align their technology with their business goals."
      />
      <Section
        title="Latest articles"
        link={{ text: "See all articles", href: ROUTES.Articles }}
      >
        <ul class="flex flex-col gap-4">
          {
            articles.map((post) => (
              <li>
                <ArrowCard entry={post} />
              </li>
            ))
          }
        </ul>
      </Section>
      <Section
        title="Mailing List"
        description="Sign up for my mailing list to receive my articles straight in your inbox."
        ><form
          action="https://buttondown.com/api/emails/embed-subscribe/passionately-curious"
          method="post"
          target="popupwindow"
          onsubmit="window.open('https://buttondown.com/passionately-curious', 'popupwindow')"
          class="embeddable-buttondown-form space-y-4"
        >
          <div
            class="flex flex-col sm:flex-row sm:items-end sm:gap-4 space-y-4 sm:space-y-0"
          >
            <div class="flex-grow">
              <label for="bd-email" class="text-sm font-medium">
                Enter your email
              </label>
              <input
                type="email"
                name="email"
                id="bd-email"
                class="w-full px-4 h-10 border rounded-lg dark:bg-gray-800 dark:border-gray-700"
              />
            </div>

            <input
              type="submit"
              value="Subscribe"
              class="px-4 py-2 h-10 font-semibold text-white bg-gray-500 rounded-lg hover:bg-gray-800 dark:bg-gray-200 dark:text-gray-900 dark:hover:bg-gray-300 sm:whitespace-nowrap"
            />
          </div>

          <p class="text-xs text-gray-400">
            <a
              href="https://buttondown.com/refer/passionately-curious"
              target="_blank"
              class="hover:underline"
            >
              Powered by Buttondown.
            </a>
          </p>
        </form>
      </Section>
      <Section
        title="Recent projects"
        link={{ text: "See all projects", href: ROUTES.Projects }}
      >
        <ul class="flex flex-col gap-4">
          {
            projects.length > 0
              ? projects.map((project) => (
                  <li>
                    <ArrowCard entry={project} />
                  </li>
                ))
              : "Coming Soon!"
          }
        </ul>
      </Section>
      <Section
        title="Work experience"
        link={{ text: "See all work", href: ROUTES.Work }}
      >
        <ul class="flex flex-col gap-4">
          {
            work.map((entry) => (
              <li>
                <div class="text-sm opacity-75">
                  {dateRange(entry.data.dateStart, entry.data.dateEnd)}
                </div>
                <div class="font-semibold text-black dark:text-white">
                  {entry.data.company}
                </div>
                <div class="text-sm opacity-75">{entry.data.role}</div>
                <article>
                  <entry.Content />
                </article>
              </li>
            ))
          }
        </ul>
      </Section>

      <Section
        title="Let's Work Together"
        description="If you're interested in working with me, book a complementary discovery session below."
      >
        <CalendarBooker client:load />
        <ul class="flex flex-wrap gap-2">
          {
            SOCIALS.map((SOCIAL) => (
              <li class="flex gap-x-2 text-nowrap">
                <SocialLink
                  href={SOCIAL.HREF}
                  external
                  aria-label={`${SITE.NAME} on ${SOCIAL.NAME}`}
                >
                  <svg class="size-6 fill-current" aria-hidden="true">
                    <use href={`/socials.svg#${SOCIAL.NAME.toLowerCase()}`} />
                  </svg>
                  <span class="sr-only">{SOCIAL.NAME}</span>
                </SocialLink>
              </li>
            ))
          }
        </ul>
      </Section>
    </div>
  </Container>
</PageLayout>
